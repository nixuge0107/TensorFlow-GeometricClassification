node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 12288
        }
      }
    }
  }
}
node {
  name: "labels_placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1519
          }
        }
        string_val: "D:/train_data/image_data/input_data/circle/177samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/906samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/838samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1887samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/66samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/139samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1365samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1301samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1178samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/393samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/446samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1611samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1329samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/633samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1398samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/569samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1091samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/482samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1857samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/423samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/145samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/596samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1180samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/932samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1793samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1614samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/981samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/709samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/931samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/669samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/196samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/182samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/632samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/500samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1030samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/716samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/649samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/664samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/962samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/563samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/94samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1837samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/680samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/711samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/484samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/68samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/479samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1623samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1492samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1525samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1317samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1143samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/256samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/941samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1296samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1394samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1853samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1145samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/270samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1609samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/687samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/214samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/879samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/555samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/628samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/405samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/741samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/146samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/99samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/971samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1416samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1745samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1240samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/625samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1754samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1457samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1683samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1000samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/626samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/21samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/978samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1410samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1553samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/802samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/703samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/426samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1843samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1279samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1288samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/955samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/32samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1088samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1654samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1516samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/419samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1740samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1331samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1672samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1695samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/461samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1743samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/689samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/639samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1841samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/428samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/578samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1765samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/654samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1872samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/872samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/188samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1289samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1217samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/352samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1640samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1503samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/404samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1565samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1515samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/725samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/379samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1286samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/575samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/8samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1418samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/190samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/29samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1822samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1710samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1537samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1850samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1339samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/686samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1452samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1523samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/297samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1669samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/54samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/34samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1155samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/678samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1026samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/170samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/696samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/953samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/173samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/895samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/740samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/441samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/425samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/567samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/880samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1729samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/203samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/900samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1649samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/681samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1062samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/421samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/928samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1653samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1471samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/977samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/413samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1688samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1324samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/222samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/386samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1469samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/964samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1170samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/248samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/50samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1219samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1633samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/164samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/316samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1461samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1274samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1386samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1380samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1120samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1147samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1866samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/144samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1664samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/107samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/73samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/939samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/253samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/212samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1550samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1379samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/105samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/869samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1551samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1103samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1526samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1388samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/20samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1436samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/478samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/287samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1494samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1827samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/106samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1700samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1704samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1303samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/650samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/882samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/531samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/808samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/997samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1085samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1396samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/845samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/562samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/584samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/806samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/769samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/163samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/547samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1067samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/184samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1675samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/814samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/629samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1665samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/251samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1058samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1238samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/522samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1742samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/876samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/460samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1659samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/910samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/892samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1547samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/679samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1713samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1177samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1560samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/768samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1825samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/865samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1509samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1173samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1040samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/280samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1829samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1894samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1617samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1142samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1836samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/266samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/138samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/943samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/533samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/825samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/329samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1873samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/881samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/778samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/793samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1271samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/553samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1507samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1037samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/792samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/637samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/891samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1600samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1342samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1125samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/192samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1298samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1198samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1080samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1357samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1076samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1285samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1146samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1008samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/916samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/444samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1753samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/786samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1867samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/519samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1214samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/0samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1817samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/732samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/934samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/158samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1757samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1358samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/877samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/215samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1528samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1707samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1375samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/328samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1134samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1149samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/830samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1059samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/842samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1230samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/245samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1169samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1216samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1606samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/40samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/53samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/942samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1131samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/823samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1681samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1566samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/382samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1473samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/779samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/705samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/454samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/347samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1610samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1083samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/677samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1511samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1270samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1498samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1508samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/752samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/693samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/770samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/528samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1493samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/462samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1512samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/101samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/380samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1563samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1618samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1561samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1055samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/799samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/738samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/858samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1562samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/790samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1832samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/746samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/843samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/495samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1275samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1582samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1189samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/360samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/926samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1556samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1446samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/319samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1802samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1361samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/435samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/640samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1748samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/710samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/644samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1884samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/874samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1141samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1343samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/734samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1130samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/400samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1384samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/273samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1879samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/90samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1554samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1543samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1442samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1558samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/355samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/511samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/976samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1200samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1433samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1123samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1252samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1069samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1307samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/330samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/954samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/777samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/990samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/661samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1227samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1081samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1034samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/960samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1417samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1202samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1823samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1367samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/526samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/820samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1203samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/157samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/899samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1239samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1350samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/283samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/114samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/123samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/590samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/205samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1479samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1182samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/616samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1157samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/186samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/424samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/387samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/662samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/598samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/965samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1812samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/470samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/51samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1881samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/826samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/26samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/503samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1129samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1731samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1382samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1042samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/95samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/437samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1144samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/730samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1637samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/191samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/140samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1607samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/258samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1406samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/759samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1735samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/490samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1504samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/257samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1431samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1226samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/407samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1794samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1251samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/824samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/62samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/668samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/561samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1094samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1604samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/663samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/980samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/992samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/936samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/623samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1447samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/37samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/764samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1338samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1699samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/318samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1752samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/346samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1191samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/13samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/427samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/973samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1263samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1184samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/235samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1071samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/861samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/410samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/651samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/336samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/538samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1304samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1826samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1580samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1016samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1591samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/221samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/160samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1594samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/314samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1078samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1552samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1601samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1598samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/126samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1114samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1864samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/321samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/364samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1518samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/925samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1023samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1773samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/473samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/282samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/929samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1210samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/909samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1629samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/476samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1236samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/406samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1455samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/254samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/622samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/757samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1391samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1807samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/840samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/119samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/395samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/647samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1549samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/242samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/701samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/260samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1228samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1117samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/415samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/174samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/812samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1064samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1197samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/180samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/514samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/310samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1771samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/773samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/243samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/602samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/372samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/165samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/168samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1801samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1362samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1778samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1400samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1791samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1684samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/648samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1124samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/267samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/60samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1842samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/474samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1755samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/819samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1121samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1185samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/394samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/722samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/229samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/238samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/86samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1574samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/720samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1536samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/731samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1221samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/472samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1084samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1808samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1116samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/557samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/988samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1587samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/527samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1135samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/667samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1110samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1651samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/10samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1175samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1862samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1020samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1393samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1281samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/804samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1571samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/834samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1150samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1005samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/959samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1154samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/366samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/618samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/117samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/868samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1529samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/852samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/388samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1075samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1613samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1360samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1355samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/599samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/12samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1736samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1750samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1858samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1497samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1486samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1119samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1519samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/363samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/224samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/217samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/342samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1277samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1705samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/332samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1137samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/912samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1159samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/241samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/657samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/572samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1568samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1733samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/878samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/605samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/920samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/64samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1409samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1305samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/4samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1082samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1019samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/225samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1467samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/593samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1897samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1459samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/539samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/115samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1663samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/11samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1885samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/656samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1694samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/694samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/313samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1619samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/343samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/308samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1878samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/751samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1506samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1018samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/181samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1714samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1164samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1456samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1041samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/96samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/742samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/587samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/789samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1133samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1287samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1261samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1711samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1105samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/383samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/148samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1585samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/74samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/831samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1272samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1638samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1608samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1325samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/377samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/80samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/919samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/937samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/653samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/459samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/128samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1679samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/706samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1818samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1716samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/534samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1685samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1111samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1532samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1634samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1702samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1766samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/91samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/889samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/75samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1381samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/189samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/673samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/893samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1445samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/349samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1369samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/63samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1828samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/996samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/524samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/863samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/326samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1294samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1244samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1444samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/620samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1101samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/111samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1496samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/589samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/883samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1253samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/6samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/236samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1670samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/857samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1513samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/338samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1500samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1751samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/659samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/137samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/698samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/817samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1029samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/149samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/748samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/440samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1746samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1522samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1639samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/646samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/57samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1730samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/510samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1268samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/265samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1898samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1576samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1656samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1109samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1340samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/89samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1419samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/24samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/791samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/966samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1435samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1235samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1831samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/998samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1874samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1231samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/432samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1650samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1448samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/485samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/543samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1420samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1820samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/7samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1703samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1824samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/36samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1677samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/576samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/851samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/418samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/763samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/809samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1032samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1538samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1530samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/100samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/198samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/166samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1322samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/183samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/202samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/670samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/375samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1643samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1421samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/785samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/206samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1661samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/700samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1424samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1605samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1723samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/807samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1701samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/239samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/422samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/52samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1310samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/272samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1658samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/982samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1196samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/849samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1849samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/546samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1234samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1102samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1759samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1013samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1830samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/800samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/611samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1628samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/110samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1292samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/19samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/594samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/774samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/458samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/112samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1213samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/565samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1622samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/854samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/83samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1860samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/766samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/399samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1784samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1572samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/162samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/972samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/88samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/719samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1856samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1815samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1168samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/30samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1389samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1212samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1728samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1646samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1414samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/300samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1255samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1370samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/87samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1193samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/194samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/327samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/275samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/451samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1719samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/392samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1760samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1422samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1250samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/497samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1586samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1278samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/204samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/102samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/489samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/167samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/564samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1404samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/337samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/429samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1276samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1584samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/610samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1727samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/284samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/695samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/828samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1772samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1805samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1573samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1686samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/811samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1854samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1306samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1845samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1043samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/915samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1761samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/642samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1800samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/918samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1599samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/947samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1337samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/745samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1006samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/456samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1475samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/246samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1596samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/92samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/475samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1077samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1535samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/655samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1321samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/782samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/609samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/33samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1544samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1266samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1333samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1674samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1542samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1403samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/846samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/477samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/688samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1627samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1044samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1126samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/509samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1603samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1764samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/457samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1090samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1399samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/927samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/685samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1104samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1440samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/911samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/948samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1678samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1254samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1411samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1795samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/502samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/548samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/361samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/276samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/303samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1166samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/23samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1107samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/169samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/38samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/187samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/373samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1625samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1642samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1073samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/262samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/608samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/755samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1383samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1779samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1834samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1233samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1100samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1344samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/312samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1308samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/607samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/803samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/368samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1364samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/370samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/592samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/908samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1346samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/340samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/570samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1009samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1099samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1770samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/384samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/240samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1068samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/468samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/554samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1167samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1066samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1697samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/737samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/143samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1540samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1359samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1035samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/583samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/195samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/537samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1323samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/798samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1172samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/617samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1429samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1183samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1636samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1372samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/888samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1265samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/234samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/796samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/508samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1015samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1466samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1696samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1397samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/597samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1449samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1425samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/481samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/702samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/43samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/237samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/434samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/334samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/281samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1086samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1690samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1698samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1804samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1039samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1810samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1089samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/859samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1883samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/448samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1118samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1680samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1004samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/829samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/48samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1195samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1258samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/249samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1747samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/492samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/176samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/396samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/27samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/520samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/288samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1859samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1241samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/120samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/77samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1480samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1891samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/56samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1816samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/285samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/837samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1267samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/771samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1051samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1242samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1415samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1724samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/153samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1282samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1140samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/416samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/46samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1165samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1162samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1063samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1049samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/116samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/704samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1501samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1517samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1423samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1095samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/69samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/866samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1487samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/712samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1477samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1209samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/743samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/141samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1402samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/847samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/619samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/821samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1588samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/274samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1662samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1777samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/127samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1160samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/850samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/121samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/758samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/560samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1093samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/848samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1490samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/963samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/974samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/917samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1334samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/697samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/952samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1725samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/615samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1548samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/897samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1153samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/333samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/894samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/765samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/28samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/525samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/449samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/130samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/945samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/975samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/84samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1222samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1668samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1852samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/211samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/443samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1163samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/577samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1844samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/735samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/643samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1401samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/603samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/71samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/961samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1283samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/855samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1744samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1527samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/993samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/488samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1809samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1717samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1655samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/606samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/913samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1247samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1590samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1896samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/835samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1769samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/902samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1460samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1297samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1022samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1624samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/304samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1246samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1437samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/638samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1833samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1348samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1835samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/566samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/573samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/958samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/200samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/901samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1868samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/853samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/286samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/350samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1430samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/483samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/683samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/369samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/271samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/226samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1689samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/264samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1363samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1299samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/532samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/923samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1218samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1395samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1451samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/844samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1108samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1366samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1799samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1413samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/624samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/921samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1673samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1790samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1570samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/431samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/291samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/930samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/999samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1567samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1546samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/445samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/744samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/652samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/856samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1652samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/293samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1767samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/154samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/85samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1691samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/612samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/783samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1050samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1353samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1412samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/938samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/317samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1243samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1204samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/150samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/233samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/621samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1631samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1215samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1374samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/155samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1249samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/210samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/591samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1225samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/136samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/898samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1798samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/179samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1481samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1531samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/559samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/987samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1579samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1313samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/498samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/131samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1671samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/747samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/905samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1269samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/5samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1181samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/571samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/984samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/550samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1260samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1284samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1520samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/324samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/499samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1426samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1483samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/207samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1092samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/870samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/985samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1583samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1521samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/480samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/103samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/914samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/493samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/733samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/259samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/209samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1875samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1201samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1171samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1248samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1890samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/41samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/420samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1462samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1738samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1223samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/65samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1861samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/323samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/208samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/3samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1895samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1002samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/832samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1010samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/761samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/781samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1211samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1205samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1709samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/125samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/486samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/721samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1464samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/220samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1454samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/442samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/580samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1264samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1291samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1630samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/409samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1336samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/378samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/231samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/367samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1405samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/907samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/22samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/353samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1876samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/549samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/729samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/295samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/436samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/487samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/595samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1819samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1597samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/552samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1869samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1232samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/296samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/109samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/134samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/518samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/59samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1256samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/359samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1327samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/223samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1207samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/339samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1774samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1732samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/699samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/635samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1758samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/161samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1786samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1785samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/320samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1048samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/325samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1533samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1718samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/294samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/989samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1047samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/335samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/172samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/402samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/76samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1314samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1079samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1045samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/833samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1682samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1036samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/278samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1011samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1762samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1186samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1309samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1474samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/299samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/447samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1376samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1524samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/775samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/501samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/178samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/467samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/753samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/723samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1014samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1237samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/717samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1712samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1488samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1443samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1472samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1072samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1737samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/228samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/739samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1257samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1347samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1259samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1847samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/118samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1220samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/805samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/15samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1846samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/371samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1484samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/175samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/193samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1056samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1687samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/671samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1300samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/135samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1803samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1692samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1476samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/389samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/108samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/365samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/586samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/397samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/645samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/2samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/289samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/147samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1821samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1312samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1615samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/98samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1739samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/512samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/201samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1863samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1468samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1434samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/558samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1351samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1427samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/322samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1514samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/665samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1001samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/946samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/82samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/357samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/25samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1224samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1138samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/613samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/601samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/674samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1635samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/244samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/718samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/970samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1871samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/250samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1262samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1720samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/81samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1319samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1555samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/951samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1620samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1848samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/156samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1438samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1320samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/535samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/72samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/151samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1208samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1190samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/411samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/199samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1575samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/44samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1776samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/684samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/585samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/568samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/839samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1432samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1741samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1179samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1893samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/216samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1302samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/55samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1796samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/31samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/1060samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/438samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/triangle/728samples1.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1502samples2.jpg"
        string_val: "D:/train_data/image_data/input_data/circle/507samples0.jpg"
        string_val: "D:/train_data/image_data/input_data/rectangle/1721samples2.jpg"
      }
    }
  }
}
node {
  name: "Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1519
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "input_producer/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1519
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice"
  op: "StridedSlice"
  input: "input_producer/Shape"
  input: "input_producer/strided_slice/stack"
  input: "input_producer/strided_slice/stack_1"
  input: "input_producer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_producer/input_producer/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range"
  op: "Range"
  input: "input_producer/input_producer/range/start"
  input: "input_producer/strided_slice"
  input: "input_producer/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_producer/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "input_producer/input_producer/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_producer/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "input_producer/input_producer"
  input: "input_producer/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "input_producer/input_producer"
}
node {
  name: "input_producer/input_producer/ToFloat"
  op: "Cast"
  input: "input_producer/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_producer/input_producer/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "input_producer/input_producer/mul"
  op: "Mul"
  input: "input_producer/input_producer/ToFloat"
  input: "input_producer/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_producer/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "input_producer/input_producer/fraction_of_32_full/tags"
  input: "input_producer/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_producer/input_producer_Dequeue"
  op: "QueueDequeueV2"
  input: "input_producer/input_producer"
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/GatherV2"
  op: "GatherV2"
  input: "Cast/x"
  input: "input_producer/input_producer_Dequeue"
  input: "input_producer/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "input_producer/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/GatherV2_1"
  op: "GatherV2"
  input: "Cast_1/x"
  input: "input_producer/input_producer_Dequeue"
  input: "input_producer/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "input_producer/GatherV2"
}
node {
  name: "DecodeJpeg"
  op: "DecodeJpeg"
  input: "ReadFile"
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/ExpandDims"
  op: "ExpandDims"
  input: "DecodeJpeg"
  input: "resize_image_with_crop_or_pad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Shape"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/Less"
  op: "Less"
  input: "resize_image_with_crop_or_pad/assert_positive/Const"
  input: "resize_image_with_crop_or_pad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/All"
  op: "All"
  input: "resize_image_with_crop_or_pad/assert_positive/assert_less/Less"
  input: "resize_image_with_crop_or_pad/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/assert_positive/assert_less/All"
  input: "resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/control_dependency"
  op: "Identity"
  input: "resize_image_with_crop_or_pad/ExpandDims"
  input: "^resize_image_with_crop_or_pad/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_image_with_crop_or_pad/ExpandDims"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Shape_1"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/unstack"
  op: "Unpack"
  input: "resize_image_with_crop_or_pad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/sub"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/sub/x"
  input: "resize_image_with_crop_or_pad/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Neg"
  op: "Neg"
  input: "resize_image_with_crop_or_pad/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv"
  op: "FloorDiv"
  input: "resize_image_with_crop_or_pad/Neg"
  input: "resize_image_with_crop_or_pad/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum"
  op: "Maximum"
  input: "resize_image_with_crop_or_pad/floordiv"
  input: "resize_image_with_crop_or_pad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_1"
  op: "FloorDiv"
  input: "resize_image_with_crop_or_pad/sub"
  input: "resize_image_with_crop_or_pad/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_1"
  op: "Maximum"
  input: "resize_image_with_crop_or_pad/floordiv_1"
  input: "resize_image_with_crop_or_pad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/sub_1"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/sub_1/x"
  input: "resize_image_with_crop_or_pad/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Neg_1"
  op: "Neg"
  input: "resize_image_with_crop_or_pad/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_2"
  op: "FloorDiv"
  input: "resize_image_with_crop_or_pad/Neg_1"
  input: "resize_image_with_crop_or_pad/floordiv_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_2"
  op: "Maximum"
  input: "resize_image_with_crop_or_pad/floordiv_2"
  input: "resize_image_with_crop_or_pad/Maximum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/floordiv_3"
  op: "FloorDiv"
  input: "resize_image_with_crop_or_pad/sub_1"
  input: "resize_image_with_crop_or_pad/floordiv_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Maximum_3"
  op: "Maximum"
  input: "resize_image_with_crop_or_pad/floordiv_3"
  input: "resize_image_with_crop_or_pad/Maximum_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Minimum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Minimum"
  op: "Minimum"
  input: "resize_image_with_crop_or_pad/Minimum/x"
  input: "resize_image_with_crop_or_pad/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Minimum_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Minimum_1"
  op: "Minimum"
  input: "resize_image_with_crop_or_pad/Minimum_1/x"
  input: "resize_image_with_crop_or_pad/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Shape"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Less"
  op: "Less"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/Const"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/All"
  op: "All"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Less"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/All"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Shape_1"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/unstack"
  op: "Unpack"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/Maximum"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_width must be >= 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_width must be >= 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/Maximum_2"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_1"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater"
  op: "Greater"
  input: "resize_image_with_crop_or_pad/Minimum_1"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_width must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_width must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater_1"
  op: "Greater"
  input: "resize_image_with_crop_or_pad/Minimum"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_height must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_3/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target_height must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_3/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Greater_1"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_3/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/add"
  op: "Add"
  input: "resize_image_with_crop_or_pad/Minimum_1"
  input: "resize_image_with_crop_or_pad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_2"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/unstack:2"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be >= target + offset."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_4/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be >= target + offset."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_4/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_2"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_4/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/add_1"
  op: "Add"
  input: "resize_image_with_crop_or_pad/Minimum"
  input: "resize_image_with_crop_or_pad/Maximum_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_3"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/unstack:1"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_5/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_5/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/GreaterEqual_3"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_5/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/control_dependency"
  op: "Identity"
  input: "resize_image_with_crop_or_pad/control_dependency"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_1/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_2/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_3/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_4/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/Assert_5/Assert"
  input: "^resize_image_with_crop_or_pad/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_image_with_crop_or_pad/ExpandDims"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack"
  op: "Pack"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack/0"
  input: "resize_image_with_crop_or_pad/Maximum_2"
  input: "resize_image_with_crop_or_pad/Maximum"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1"
  op: "Pack"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/0"
  input: "resize_image_with_crop_or_pad/Minimum"
  input: "resize_image_with_crop_or_pad/Minimum_1"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  op: "Slice"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/control_dependency"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/stack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Shape"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Less"
  op: "Less"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/Const"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/All"
  op: "All"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Less"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/All"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Shape_1"
  op: "Shape"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/unstack"
  op: "Unpack"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub/x"
  input: "resize_image_with_crop_or_pad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_2"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_2/x"
  input: "resize_image_with_crop_or_pad/Maximum_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_3"
  op: "Sub"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_2"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/Maximum_3"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_height must be >= 0"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/Maximum_1"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_width must be >= 0"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "offset_width must be >= 0"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_1"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_2"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be <= target - offset"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_2/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be <= target - offset"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_2/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_2"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_2/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_3"
  op: "GreaterEqual"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_3"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be <= target - offset"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_3/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be <= target - offset"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_3/Assert"
  op: "Assert"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/GreaterEqual_3"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_3/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/control_dependency"
  op: "Identity"
  input: "resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
  input: "^resize_image_with_crop_or_pad/pad_to_bounding_box/Assert/Assert"
  input: "^resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_1/Assert"
  input: "^resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_2/Assert"
  input: "^resize_image_with_crop_or_pad/pad_to_bounding_box/Assert_3/Assert"
  input: "^resize_image_with_crop_or_pad/pad_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_image_with_crop_or_pad/crop_to_bounding_box/Slice"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack"
  op: "Pack"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/0"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/1"
  input: "resize_image_with_crop_or_pad/Maximum_3"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_3"
  input: "resize_image_with_crop_or_pad/Maximum_1"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/sub_1"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/6"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack/7"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape"
  op: "Reshape"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/stack"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
  op: "Pad"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/control_dependency"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Reshape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/control_dependency_1"
  op: "Identity"
  input: "resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_image_with_crop_or_pad/pad_to_bounding_box/Pad"
      }
    }
  }
}
node {
  name: "resize_image_with_crop_or_pad/Squeeze"
  op: "Squeeze"
  input: "resize_image_with_crop_or_pad/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "per_image_standardization/control_dependency"
  op: "Identity"
  input: "resize_image_with_crop_or_pad/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_image_with_crop_or_pad/Squeeze"
      }
    }
  }
}
node {
  name: "per_image_standardization/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "per_image_standardization/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "per_image_standardization/Prod"
  op: "Prod"
  input: "per_image_standardization/Shape"
  input: "per_image_standardization/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "per_image_standardization/Cast"
  op: "Cast"
  input: "per_image_standardization/control_dependency"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "per_image_standardization/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "per_image_standardization/Mean"
  op: "Mean"
  input: "per_image_standardization/Cast"
  input: "per_image_standardization/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "per_image_standardization/Square"
  op: "Square"
  input: "per_image_standardization/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "per_image_standardization/Mean_1"
  op: "Mean"
  input: "per_image_standardization/Square"
  input: "per_image_standardization/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "per_image_standardization/Square_1"
  op: "Square"
  input: "per_image_standardization/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/sub"
  op: "Sub"
  input: "per_image_standardization/Mean_1"
  input: "per_image_standardization/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Relu"
  op: "Relu"
  input: "per_image_standardization/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Sqrt"
  op: "Sqrt"
  input: "per_image_standardization/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Cast_1"
  op: "Cast"
  input: "per_image_standardization/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "per_image_standardization/Rsqrt"
  op: "Rsqrt"
  input: "per_image_standardization/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Maximum"
  op: "Maximum"
  input: "per_image_standardization/Sqrt"
  input: "per_image_standardization/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization/Sub"
  op: "Sub"
  input: "per_image_standardization/Cast"
  input: "per_image_standardization/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "per_image_standardization"
  op: "RealDiv"
  input: "per_image_standardization/Sub"
  input: "per_image_standardization/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  attr {
    key: "capacity"
    value {
      i: 200
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "per_image_standardization"
  input: "input_producer/GatherV2_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch/fraction_of_200_full/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_200_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_200_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_200_full/tags"
  input: "batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "batch:1"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "input"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/truncated_normal/mul"
  op: "Mul"
  input: "conv1/truncated_normal/TruncatedNormal"
  input: "conv1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/truncated_normal"
  op: "Add"
  input: "conv1/truncated_normal/mul"
  input: "conv1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Assign"
  op: "Assign"
  input: "conv1/weights"
  input: "conv1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/read"
  op: "Identity"
  input: "conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Assign"
  op: "Assign"
  input: "conv1/biases"
  input: "conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/read"
  op: "Identity"
  input: "conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/Conv2D"
  op: "Conv2D"
  input: "Reshape_1"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BiasAdd"
  op: "BiasAdd"
  input: "conv1/Conv2D"
  input: "conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv1/conv1"
  op: "Relu"
  input: "conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pooling1_lrn/pooling1"
  op: "MaxPool"
  input: "conv1/conv1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "pooling1_lrn/norm1"
  op: "LRN"
  input: "pooling1_lrn/pooling1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.00011111111234640703
    }
  }
  attr {
    key: "beta"
    value {
      f: 0.75
    }
  }
  attr {
    key: "bias"
    value {
      f: 1.0
    }
  }
  attr {
    key: "depth_radius"
    value {
      i: 4
    }
  }
}
node {
  name: "conv2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/truncated_normal/mul"
  op: "Mul"
  input: "conv2/truncated_normal/TruncatedNormal"
  input: "conv2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/truncated_normal"
  op: "Add"
  input: "conv2/truncated_normal/mul"
  input: "conv2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Assign"
  op: "Assign"
  input: "conv2/weights"
  input: "conv2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/read"
  op: "Identity"
  input: "conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Assign"
  op: "Assign"
  input: "conv2/biases"
  input: "conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/read"
  op: "Identity"
  input: "conv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "conv2/Conv2D"
  op: "Conv2D"
  input: "pooling1_lrn/norm1"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BiasAdd"
  op: "BiasAdd"
  input: "conv2/Conv2D"
  input: "conv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2/conv2"
  op: "Relu"
  input: "conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pooling2_lrn/norm2"
  op: "LRN"
  input: "conv2/conv2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.00011111111234640703
    }
  }
  attr {
    key: "beta"
    value {
      f: 0.75
    }
  }
  attr {
    key: "bias"
    value {
      f: 1.0
    }
  }
  attr {
    key: "depth_radius"
    value {
      i: 4
    }
  }
}
node {
  name: "pooling2_lrn/pooling2"
  op: "MaxPool"
  input: "pooling2_lrn/norm2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "local3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "local3/Reshape"
  op: "Reshape"
  input: "pooling2_lrn/pooling2"
  input: "local3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local3/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local3/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local3/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "local3/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "local3/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local3/truncated_normal/mul"
  op: "Mul"
  input: "local3/truncated_normal/TruncatedNormal"
  input: "local3/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local3/truncated_normal"
  op: "Add"
  input: "local3/truncated_normal/mul"
  input: "local3/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local3/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/weights/Assign"
  op: "Assign"
  input: "local3/weights"
  input: "local3/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/weights/read"
  op: "Identity"
  input: "local3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
}
node {
  name: "local3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "local3/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/biases/Assign"
  op: "Assign"
  input: "local3/biases"
  input: "local3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/biases/read"
  op: "Identity"
  input: "local3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
}
node {
  name: "local3/MatMul"
  op: "MatMul"
  input: "local3/Reshape"
  input: "local3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local3/add"
  op: "Add"
  input: "local3/MatMul"
  input: "local3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local3/local3"
  op: "Relu"
  input: "local3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local4/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local4/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local4/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "local4/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "local4/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local4/truncated_normal/mul"
  op: "Mul"
  input: "local4/truncated_normal/TruncatedNormal"
  input: "local4/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local4/truncated_normal"
  op: "Add"
  input: "local4/truncated_normal/mul"
  input: "local4/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local4/weights"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/weights/Assign"
  op: "Assign"
  input: "local4/weights"
  input: "local4/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/weights/read"
  op: "Identity"
  input: "local4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
}
node {
  name: "local4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "local4/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/biases/Assign"
  op: "Assign"
  input: "local4/biases"
  input: "local4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/biases/read"
  op: "Identity"
  input: "local4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
}
node {
  name: "local4/MatMul"
  op: "MatMul"
  input: "local3/local3"
  input: "local4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local4/add"
  op: "Add"
  input: "local4/MatMul"
  input: "local4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local4/local4"
  op: "Relu"
  input: "local4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_linear/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_linear/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_linear/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "softmax_linear/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "softmax_linear/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_linear/truncated_normal/mul"
  op: "Mul"
  input: "softmax_linear/truncated_normal/TruncatedNormal"
  input: "softmax_linear/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_linear/truncated_normal"
  op: "Add"
  input: "softmax_linear/truncated_normal/mul"
  input: "softmax_linear/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_linear/softmax_linear"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Assign"
  op: "Assign"
  input: "softmax_linear/softmax_linear"
  input: "softmax_linear/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/read"
  op: "Identity"
  input: "softmax_linear/softmax_linear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
}
node {
  name: "softmax_linear/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "softmax_linear/biases"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/biases/Assign"
  op: "Assign"
  input: "softmax_linear/biases"
  input: "softmax_linear/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/biases/read"
  op: "Identity"
  input: "softmax_linear/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
}
node {
  name: "softmax_linear/MatMul"
  op: "MatMul"
  input: "local4/local4"
  input: "softmax_linear/softmax_linear/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_linear/softmax"
  op: "Add"
  input: "softmax_linear/MatMul"
  input: "softmax_linear/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_linear/output/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_linear/output"
  op: "ArgMax"
  input: "softmax_linear/softmax"
  input: "softmax_linear/output/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "loss/xentropy_per_example/Shape"
  op: "Shape"
  input: "labels_placeholder"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/xentropy_per_example/xentropy_per_example"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "softmax_linear/softmax"
  input: "labels_placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/loss"
  op: "Mean"
  input: "loss/xentropy_per_example/xentropy_per_example"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/loss/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/loss/loss"
      }
    }
  }
}
node {
  name: "loss/loss/loss"
  op: "ScalarSummary"
  input: "loss/loss/loss/tags"
  input: "loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizer/global_step"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizer/global_step/Assign"
  op: "Assign"
  input: "optimizer/global_step"
  input: "optimizer/global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/global_step/read"
  op: "Identity"
  input: "optimizer/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/global_step"
      }
    }
  }
}
node {
  name: "optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizer/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizer/gradients/Fill"
  op: "Fill"
  input: "optimizer/gradients/Shape"
  input: "optimizer/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/Fill"
  input: "optimizer/gradients/loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Shape"
  op: "Shape"
  input: "loss/xentropy_per_example/xentropy_per_example"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Tile"
  op: "Tile"
  input: "optimizer/gradients/loss/loss_grad/Reshape"
  input: "optimizer/gradients/loss/loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Shape_1"
  op: "Shape"
  input: "loss/xentropy_per_example/xentropy_per_example"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Prod"
  op: "Prod"
  input: "optimizer/gradients/loss/loss_grad/Shape_1"
  input: "optimizer/gradients/loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Prod_1"
  op: "Prod"
  input: "optimizer/gradients/loss/loss_grad/Shape_2"
  input: "optimizer/gradients/loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Maximum"
  op: "Maximum"
  input: "optimizer/gradients/loss/loss_grad/Prod_1"
  input: "optimizer/gradients/loss/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/floordiv"
  op: "FloorDiv"
  input: "optimizer/gradients/loss/loss_grad/Prod"
  input: "optimizer/gradients/loss/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/Cast"
  op: "Cast"
  input: "optimizer/gradients/loss/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/loss_grad/truediv"
  op: "RealDiv"
  input: "optimizer/gradients/loss/loss_grad/Tile"
  input: "optimizer/gradients/loss/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/xentropy_per_example/xentropy_per_example:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/PreventGradient"
  op: "PreventGradient"
  input: "loss/xentropy_per_example/xentropy_per_example:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/ExpandDims"
  op: "ExpandDims"
  input: "optimizer/gradients/loss/loss_grad/truediv"
  input: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/ExpandDims"
  input: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Shape"
  op: "Shape"
  input: "softmax_linear/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Shape"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/mul"
  input: "optimizer/gradients/softmax_linear/softmax_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Sum"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/loss/xentropy_per_example/xentropy_per_example_grad/mul"
  input: "optimizer/gradients/softmax_linear/softmax_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Sum_1"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/softmax_linear/softmax_grad/Reshape"
  input: "^optimizer/gradients/softmax_linear/softmax_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Reshape"
  input: "^optimizer/gradients/softmax_linear/softmax_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/softmax_linear/softmax_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/softmax_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/softmax_linear/softmax_grad/Reshape_1"
  input: "^optimizer/gradients/softmax_linear/softmax_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/softmax_linear/softmax_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizer/gradients/softmax_linear/softmax_grad/tuple/control_dependency"
  input: "softmax_linear/softmax_linear/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local4/local4"
  input: "optimizer/gradients/softmax_linear/softmax_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/softmax_linear/MatMul_grad/MatMul"
  input: "^optimizer/gradients/softmax_linear/MatMul_grad/MatMul_1"
}
node {
  name: "optimizer/gradients/softmax_linear/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/softmax_linear/MatMul_grad/MatMul"
  input: "^optimizer/gradients/softmax_linear/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/softmax_linear/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "optimizer/gradients/softmax_linear/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/softmax_linear/MatMul_grad/MatMul_1"
  input: "^optimizer/gradients/softmax_linear/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/softmax_linear/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local4/local4_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/softmax_linear/MatMul_grad/tuple/control_dependency"
  input: "local4/local4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Shape"
  op: "Shape"
  input: "local4/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/local4/add_grad/Shape"
  input: "optimizer/gradients/local4/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/local4/local4_grad/ReluGrad"
  input: "optimizer/gradients/local4/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/local4/add_grad/Sum"
  input: "optimizer/gradients/local4/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/local4/local4_grad/ReluGrad"
  input: "optimizer/gradients/local4/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/local4/add_grad/Sum_1"
  input: "optimizer/gradients/local4/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/local4/add_grad/Reshape"
  input: "^optimizer/gradients/local4/add_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/local4/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/local4/add_grad/Reshape"
  input: "^optimizer/gradients/local4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local4/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local4/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/local4/add_grad/Reshape_1"
  input: "^optimizer/gradients/local4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local4/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizer/gradients/local4/add_grad/tuple/control_dependency"
  input: "local4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/local4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local3/local3"
  input: "optimizer/gradients/local4/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/local4/MatMul_grad/MatMul"
  input: "^optimizer/gradients/local4/MatMul_grad/MatMul_1"
}
node {
  name: "optimizer/gradients/local4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/local4/MatMul_grad/MatMul"
  input: "^optimizer/gradients/local4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local4/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/local4/MatMul_grad/MatMul_1"
  input: "^optimizer/gradients/local4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local4/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/local3_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/local4/MatMul_grad/tuple/control_dependency"
  input: "local3/local3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Shape"
  op: "Shape"
  input: "local3/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/local3/add_grad/Shape"
  input: "optimizer/gradients/local3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/local3/local3_grad/ReluGrad"
  input: "optimizer/gradients/local3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/local3/add_grad/Sum"
  input: "optimizer/gradients/local3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/local3/local3_grad/ReluGrad"
  input: "optimizer/gradients/local3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/local3/add_grad/Sum_1"
  input: "optimizer/gradients/local3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/local3/add_grad/Reshape"
  input: "^optimizer/gradients/local3/add_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/local3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/local3/add_grad/Reshape"
  input: "^optimizer/gradients/local3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/local3/add_grad/Reshape_1"
  input: "^optimizer/gradients/local3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizer/gradients/local3/add_grad/tuple/control_dependency"
  input: "local3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/local3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local3/Reshape"
  input: "optimizer/gradients/local3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/local3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/local3/MatMul_grad/MatMul"
  input: "^optimizer/gradients/local3/MatMul_grad/MatMul_1"
}
node {
  name: "optimizer/gradients/local3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/local3/MatMul_grad/MatMul"
  input: "^optimizer/gradients/local3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/local3/MatMul_grad/MatMul_1"
  input: "^optimizer/gradients/local3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/local3/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/local3/Reshape_grad/Shape"
  op: "Shape"
  input: "pooling2_lrn/pooling2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/local3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/local3/MatMul_grad/tuple/control_dependency"
  input: "optimizer/gradients/local3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/pooling2_lrn/pooling2_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "pooling2_lrn/norm2"
  input: "pooling2_lrn/pooling2"
  input: "optimizer/gradients/local3/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/pooling2_lrn/norm2_grad/LRNGrad"
  op: "LRNGrad"
  input: "optimizer/gradients/pooling2_lrn/pooling2_grad/MaxPoolGrad"
  input: "conv2/conv2"
  input: "pooling2_lrn/norm2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.00011111111234640703
    }
  }
  attr {
    key: "beta"
    value {
      f: 0.75
    }
  }
  attr {
    key: "bias"
    value {
      f: 1.0
    }
  }
  attr {
    key: "depth_radius"
    value {
      i: 4
    }
  }
}
node {
  name: "optimizer/gradients/conv2/conv2_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/pooling2_lrn/norm2_grad/LRNGrad"
  input: "conv2/conv2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizer/gradients/conv2/conv2_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizer/gradients/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^optimizer/gradients/conv2/conv2_grad/ReluGrad"
}
node {
  name: "optimizer/gradients/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/conv2/conv2_grad/ReluGrad"
  input: "^optimizer/gradients/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv2/conv2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^optimizer/gradients/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pooling1_lrn/norm1"
  input: "conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "optimizer/gradients/conv2/Conv2D_grad/ShapeN"
  input: "conv2/weights/read"
  input: "optimizer/gradients/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pooling1_lrn/norm1"
  input: "optimizer/gradients/conv2/Conv2D_grad/Const"
  input: "optimizer/gradients/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "optimizer/gradients/pooling1_lrn/norm1_grad/LRNGrad"
  op: "LRNGrad"
  input: "optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency"
  input: "pooling1_lrn/pooling1"
  input: "pooling1_lrn/norm1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.00011111111234640703
    }
  }
  attr {
    key: "beta"
    value {
      f: 0.75
    }
  }
  attr {
    key: "bias"
    value {
      f: 1.0
    }
  }
  attr {
    key: "depth_radius"
    value {
      i: 4
    }
  }
}
node {
  name: "optimizer/gradients/pooling1_lrn/pooling1_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv1/conv1"
  input: "pooling1_lrn/pooling1"
  input: "optimizer/gradients/pooling1_lrn/norm1_grad/LRNGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv1/conv1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/pooling1_lrn/pooling1_grad/MaxPoolGrad"
  input: "conv1/conv1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizer/gradients/conv1/conv1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizer/gradients/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^optimizer/gradients/conv1/conv1_grad/ReluGrad"
}
node {
  name: "optimizer/gradients/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/conv1/conv1_grad/ReluGrad"
  input: "^optimizer/gradients/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv1/conv1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^optimizer/gradients/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_1"
  input: "conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "optimizer/gradients/conv1/Conv2D_grad/ShapeN"
  input: "conv1/weights/read"
  input: "optimizer/gradients/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape_1"
  input: "optimizer/gradients/conv1/Conv2D_grad/Const"
  input: "optimizer/gradients/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "optimizer/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "optimizer/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizer/beta1_power/Assign"
  op: "Assign"
  input: "optimizer/beta1_power"
  input: "optimizer/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/beta1_power/read"
  op: "Identity"
  input: "optimizer/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "optimizer/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizer/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizer/beta2_power/Assign"
  op: "Assign"
  input: "optimizer/beta2_power"
  input: "optimizer/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/beta2_power/read"
  op: "Identity"
  input: "optimizer/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam/Assign"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam/read"
  op: "Identity"
  input: "conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "conv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam_1/read"
  op: "Identity"
  input: "conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Adam/Assign"
  op: "Assign"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/Adam/read"
  op: "Identity"
  input: "conv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv1/biases/Adam_1"
  input: "conv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/biases/Adam_1/read"
  op: "Identity"
  input: "conv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam/Assign"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam/read"
  op: "Identity"
  input: "conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "conv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam_1/read"
  op: "Identity"
  input: "conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Adam/Assign"
  op: "Assign"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/Adam/read"
  op: "Identity"
  input: "conv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "conv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv2/biases/Adam_1"
  input: "conv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/biases/Adam_1/read"
  op: "Identity"
  input: "conv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
}
node {
  name: "local3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "local3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "local3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/weights/Adam/Assign"
  op: "Assign"
  input: "local3/weights/Adam"
  input: "local3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/weights/Adam/read"
  op: "Identity"
  input: "local3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
}
node {
  name: "local3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "local3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "local3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/weights/Adam_1/Assign"
  op: "Assign"
  input: "local3/weights/Adam_1"
  input: "local3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/weights/Adam_1/read"
  op: "Identity"
  input: "local3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
}
node {
  name: "local3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/biases/Adam/Assign"
  op: "Assign"
  input: "local3/biases/Adam"
  input: "local3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/biases/Adam/read"
  op: "Identity"
  input: "local3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
}
node {
  name: "local3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local3/biases/Adam_1/Assign"
  op: "Assign"
  input: "local3/biases/Adam_1"
  input: "local3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local3/biases/Adam_1/read"
  op: "Identity"
  input: "local3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
}
node {
  name: "local4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "local4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "local4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/weights/Adam/Assign"
  op: "Assign"
  input: "local4/weights/Adam"
  input: "local4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/weights/Adam/read"
  op: "Identity"
  input: "local4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
}
node {
  name: "local4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "local4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "local4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "local4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/weights/Adam_1/Assign"
  op: "Assign"
  input: "local4/weights/Adam_1"
  input: "local4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/weights/Adam_1/read"
  op: "Identity"
  input: "local4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
}
node {
  name: "local4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/biases/Adam/Assign"
  op: "Assign"
  input: "local4/biases/Adam"
  input: "local4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/biases/Adam/read"
  op: "Identity"
  input: "local4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
}
node {
  name: "local4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local4/biases/Adam_1/Assign"
  op: "Assign"
  input: "local4/biases/Adam_1"
  input: "local4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local4/biases/Adam_1/read"
  op: "Identity"
  input: "local4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam/Assign"
  op: "Assign"
  input: "softmax_linear/softmax_linear/Adam"
  input: "softmax_linear/softmax_linear/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam/read"
  op: "Identity"
  input: "softmax_linear/softmax_linear/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam_1/Assign"
  op: "Assign"
  input: "softmax_linear/softmax_linear/Adam_1"
  input: "softmax_linear/softmax_linear/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/softmax_linear/Adam_1/read"
  op: "Identity"
  input: "softmax_linear/softmax_linear/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
}
node {
  name: "softmax_linear/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_linear/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/biases/Adam/Assign"
  op: "Assign"
  input: "softmax_linear/biases/Adam"
  input: "softmax_linear/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/biases/Adam/read"
  op: "Identity"
  input: "softmax_linear/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
}
node {
  name: "softmax_linear/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_linear/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "softmax_linear/biases/Adam_1/Assign"
  op: "Assign"
  input: "softmax_linear/biases/Adam_1"
  input: "softmax_linear/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_linear/biases/Adam_1/read"
  op: "Identity"
  input: "softmax_linear/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
}
node {
  name: "optimizer/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "optimizer/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "optimizer/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizer/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimizer/Adam/update_conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_conv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/biases"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_conv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/biases"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_local3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "local3/weights"
  input: "local3/weights/Adam"
  input: "local3/weights/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/local3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_local3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "local3/biases"
  input: "local3/biases/Adam"
  input: "local3/biases/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/local3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_local4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "local4/weights"
  input: "local4/weights/Adam"
  input: "local4/weights/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/local4/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_local4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "local4/biases"
  input: "local4/biases/Adam"
  input: "local4/biases/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/local4/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_softmax_linear/softmax_linear/ApplyAdam"
  op: "ApplyAdam"
  input: "softmax_linear/softmax_linear"
  input: "softmax_linear/softmax_linear/Adam"
  input: "softmax_linear/softmax_linear/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/softmax_linear/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/update_softmax_linear/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "softmax_linear/biases"
  input: "softmax_linear/biases/Adam"
  input: "softmax_linear/biases/Adam_1"
  input: "optimizer/beta1_power/read"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/learning_rate"
  input: "optimizer/Adam/beta1"
  input: "optimizer/Adam/beta2"
  input: "optimizer/Adam/epsilon"
  input: "optimizer/gradients/softmax_linear/softmax_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/Adam/mul"
  op: "Mul"
  input: "optimizer/beta1_power/read"
  input: "optimizer/Adam/beta1"
  input: "^optimizer/Adam/update_conv1/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv1/weights/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local3/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local3/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local4/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local4/weights/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/biases/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/softmax_linear/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "optimizer/Adam/Assign"
  op: "Assign"
  input: "optimizer/beta1_power"
  input: "optimizer/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/Adam/mul_1"
  op: "Mul"
  input: "optimizer/beta2_power/read"
  input: "optimizer/Adam/beta2"
  input: "^optimizer/Adam/update_conv1/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv1/weights/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local3/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local3/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local4/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local4/weights/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/biases/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/softmax_linear/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
}
node {
  name: "optimizer/Adam/Assign_1"
  op: "Assign"
  input: "optimizer/beta2_power"
  input: "optimizer/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/Adam/update"
  op: "NoOp"
  input: "^optimizer/Adam/Assign"
  input: "^optimizer/Adam/Assign_1"
  input: "^optimizer/Adam/update_conv1/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv1/weights/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/biases/ApplyAdam"
  input: "^optimizer/Adam/update_conv2/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local3/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local3/weights/ApplyAdam"
  input: "^optimizer/Adam/update_local4/biases/ApplyAdam"
  input: "^optimizer/Adam/update_local4/weights/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/biases/ApplyAdam"
  input: "^optimizer/Adam/update_softmax_linear/softmax_linear/ApplyAdam"
}
node {
  name: "optimizer/Adam/value"
  op: "Const"
  input: "^optimizer/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizer/Adam"
  op: "AssignAdd"
  input: "optimizer/global_step"
  input: "optimizer/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/in_top_k/InTopKV2/k"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "accuracy/in_top_k/InTopKV2"
  op: "InTopKV2"
  input: "softmax_linear/softmax"
  input: "labels_placeholder"
  input: "accuracy/in_top_k/InTopKV2/k"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "accuracy/Cast"
  op: "Cast"
  input: "accuracy/in_top_k/InTopKV2"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/accuracy"
  op: "Mean"
  input: "accuracy/Cast"
  input: "accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/accuracy/accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy/accuracy/accuracy"
      }
    }
  }
}
node {
  name: "accuracy/accuracy/accuracy"
  op: "ScalarSummary"
  input: "accuracy/accuracy/accuracy/tags"
  input: "accuracy/accuracy"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/input_producer/fraction_of_32_full"
  input: "batch/fraction_of_200_full"
  input: "loss/loss/loss"
  input: "accuracy/accuracy/accuracy"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 33
          }
        }
        string_val: "conv1/biases"
        string_val: "conv1/biases/Adam"
        string_val: "conv1/biases/Adam_1"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/biases"
        string_val: "conv2/biases/Adam"
        string_val: "conv2/biases/Adam_1"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "local3/biases"
        string_val: "local3/biases/Adam"
        string_val: "local3/biases/Adam_1"
        string_val: "local3/weights"
        string_val: "local3/weights/Adam"
        string_val: "local3/weights/Adam_1"
        string_val: "local4/biases"
        string_val: "local4/biases/Adam"
        string_val: "local4/biases/Adam_1"
        string_val: "local4/weights"
        string_val: "local4/weights/Adam"
        string_val: "local4/weights/Adam_1"
        string_val: "optimizer/beta1_power"
        string_val: "optimizer/beta2_power"
        string_val: "optimizer/global_step"
        string_val: "softmax_linear/biases"
        string_val: "softmax_linear/biases/Adam"
        string_val: "softmax_linear/biases/Adam_1"
        string_val: "softmax_linear/softmax_linear"
        string_val: "softmax_linear/softmax_linear/Adam"
        string_val: "softmax_linear/softmax_linear/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 33
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/biases"
  input: "conv1/biases/Adam"
  input: "conv1/biases/Adam_1"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "conv2/biases"
  input: "conv2/biases/Adam"
  input: "conv2/biases/Adam_1"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "local3/biases"
  input: "local3/biases/Adam"
  input: "local3/biases/Adam_1"
  input: "local3/weights"
  input: "local3/weights/Adam"
  input: "local3/weights/Adam_1"
  input: "local4/biases"
  input: "local4/biases/Adam"
  input: "local4/biases/Adam_1"
  input: "local4/weights"
  input: "local4/weights/Adam"
  input: "local4/weights/Adam_1"
  input: "optimizer/beta1_power"
  input: "optimizer/beta2_power"
  input: "optimizer/global_step"
  input: "softmax_linear/biases"
  input: "softmax_linear/biases/Adam"
  input: "softmax_linear/biases/Adam_1"
  input: "softmax_linear/softmax_linear"
  input: "softmax_linear/softmax_linear/Adam"
  input: "softmax_linear/softmax_linear/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 33
          }
        }
        string_val: "conv1/biases"
        string_val: "conv1/biases/Adam"
        string_val: "conv1/biases/Adam_1"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/biases"
        string_val: "conv2/biases/Adam"
        string_val: "conv2/biases/Adam_1"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "local3/biases"
        string_val: "local3/biases/Adam"
        string_val: "local3/biases/Adam_1"
        string_val: "local3/weights"
        string_val: "local3/weights/Adam"
        string_val: "local3/weights/Adam_1"
        string_val: "local4/biases"
        string_val: "local4/biases/Adam"
        string_val: "local4/biases/Adam_1"
        string_val: "local4/weights"
        string_val: "local4/weights/Adam"
        string_val: "local4/weights/Adam_1"
        string_val: "optimizer/beta1_power"
        string_val: "optimizer/beta2_power"
        string_val: "optimizer/global_step"
        string_val: "softmax_linear/biases"
        string_val: "softmax_linear/biases/Adam"
        string_val: "softmax_linear/biases/Adam_1"
        string_val: "softmax_linear/softmax_linear"
        string_val: "softmax_linear/softmax_linear/Adam"
        string_val: "softmax_linear/softmax_linear/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 33
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv1/biases"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv1/biases/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/biases/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/weights"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv2/biases"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv2/biases/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv2/biases/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv2/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "local3/biases"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "local3/biases/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "local3/biases/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "local3/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "local3/weights/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "local3/weights/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "local4/biases"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "local4/biases/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "local4/biases/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "local4/weights"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "local4/weights/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "local4/weights/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "optimizer/beta1_power"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "optimizer/beta2_power"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "optimizer/global_step"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "softmax_linear/biases"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "softmax_linear/biases/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "softmax_linear/biases/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "softmax_linear/softmax_linear"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "softmax_linear/softmax_linear/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "softmax_linear/softmax_linear/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_linear/softmax_linear"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1/biases/Adam/Assign"
  input: "^conv1/biases/Adam_1/Assign"
  input: "^conv1/biases/Assign"
  input: "^conv1/weights/Adam/Assign"
  input: "^conv1/weights/Adam_1/Assign"
  input: "^conv1/weights/Assign"
  input: "^conv2/biases/Adam/Assign"
  input: "^conv2/biases/Adam_1/Assign"
  input: "^conv2/biases/Assign"
  input: "^conv2/weights/Adam/Assign"
  input: "^conv2/weights/Adam_1/Assign"
  input: "^conv2/weights/Assign"
  input: "^local3/biases/Adam/Assign"
  input: "^local3/biases/Adam_1/Assign"
  input: "^local3/biases/Assign"
  input: "^local3/weights/Adam/Assign"
  input: "^local3/weights/Adam_1/Assign"
  input: "^local3/weights/Assign"
  input: "^local4/biases/Adam/Assign"
  input: "^local4/biases/Adam_1/Assign"
  input: "^local4/biases/Assign"
  input: "^local4/weights/Adam/Assign"
  input: "^local4/weights/Adam_1/Assign"
  input: "^local4/weights/Assign"
  input: "^optimizer/beta1_power/Assign"
  input: "^optimizer/beta2_power/Assign"
  input: "^optimizer/global_step/Assign"
  input: "^softmax_linear/biases/Adam/Assign"
  input: "^softmax_linear/biases/Adam_1/Assign"
  input: "^softmax_linear/biases/Assign"
  input: "^softmax_linear/softmax_linear/Adam/Assign"
  input: "^softmax_linear/softmax_linear/Adam_1/Assign"
  input: "^softmax_linear/softmax_linear/Assign"
}
versions {
  producer: 26
}
